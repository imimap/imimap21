import { Document, model, Model, ObjectId, Schema } from "mongoose";

export interface IInternship extends Document {
  internshipParts: ObjectId[],
  inSemester: string, //should be type Semester or so, maybe an enum/ generated by function, eg "WiSe2021"
  inSemesterOfStudy: number,
  AepPassed: boolean,
  reportPdf: string,
  completeDocumentsPdf: string,
  //events: InternshipEvent[]
}

const InternshipSchema = new Schema({
  internshipParts: [
    {
      ref: "Internship",
      type: Schema.Types.ObjectId,
    },
  ],
  inSemester: {
    type: String, //should be type Semester or so, maybe an enum/ generated by function, eg "WiSe2021"
    //default: getUpcomingSemester(),
  },
  inSemesterOfStudy: {
    type: Number,
    default: 4,
  },
  AepPassed: {
    type: Boolean,
    default: false,
  },
  reportPdf: {
    type: String,
  },
  completeDocumentsPdf: {
    type: String,
  },
  events: [
    {
      //type: InternshipEvent,
    },
  ],
});

export const Internship: Model<IInternship> = model("Internship", InternshipSchema);
